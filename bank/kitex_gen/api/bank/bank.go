// Code generated by Kitex v0.6.1. DO NOT EDIT.

package bank

import (
	api "bank/kitex_gen/api"
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return bankServiceInfo
}

var bankServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "bank"
	handlerType := (*api.Bank)(nil)
	methods := map[string]kitex.MethodInfo{
		"name": kitex.NewMethodInfo(nameHandler, newBankNameArgs, newBankNameResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "api",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.6.1",
		Extra:           extra,
	}
	return svcInfo
}

func nameHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*api.BankNameArgs)
	realResult := result.(*api.BankNameResult)
	success, err := handler.(api.Bank).Name(ctx, realArg.Request)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newBankNameArgs() interface{} {
	return api.NewBankNameArgs()
}

func newBankNameResult() interface{} {
	return api.NewBankNameResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Name(ctx context.Context, request *api.BankNameReq) (r *api.BankNameResp, err error) {
	var _args api.BankNameArgs
	_args.Request = request
	var _result api.BankNameResult
	if err = p.c.Call(ctx, "name", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
